<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Game Control Variables
turn_count = 0;
player_count = 2;
player_turn = turn_count % player_count;

//board control variables
sizeX = 20;
sizeY = 15;
global.scaleXY = 30;

//board init
board[0,0] = 0;
is_initialized = 0;

//map creation indexes
indexX = 0;
indexY = 0;

//board selection stuff
hovered_space = 0;
selected_space = 0;
hovered_index = 0;
selected_index = 0;

//Unit selection stuff
selected_unit = 0;
prev_selected = 0; //prev selected space
prev_unit = 0; //prev selected unit
unit_moved = false; //flag for unit movement
hovered_unit = 0;

total_spaces = 0;

//initial board creation
if(is_initialized == 0)
{
    while(indexX &lt; sizeX)
    {
        while(indexY &lt; sizeY)
        {
            board[indexX,indexY] = instance_create(indexX*global.scaleXY,indexY*global.scaleXY,Spaces);
            board[indexX,indexY].indexX = indexX;
            board[indexX,indexY].indexY = indexY;
    
            total_spaces++;
            indexY++;
        }
        indexY = 0;
        indexX++;
    }
indexX = 0;
is_initialized = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unit Movement &amp;&amp; Combat Code

//movement code
if(prev_unit != 0 &amp;&amp; prev_unit.has_moved == false &amp;&amp; prev_unit.owned_by == player_turn)//if there is a selected unit, it belongs to the player whos turn it is, and the unit hasn't moved
{
    for(i = 0; i &lt; array_length_1d(prev_unit.valid_x); i++)
    {
        if(selected_space.indexX == prev_unit.valid_x[i] &amp;&amp;
           selected_space.indexY == prev_unit.valid_y[i])
        {
            prev_unit.x = selected_space.indexX * global.scaleXY;
            prev_unit.y = selected_space.indexY * global.scaleXY;
            prev_unit.has_moved = true;
            prev_unit.is_selected = false;
            //unit_moved = true;
            turn_count++;
        }
    }
}
//else{} do nothing
//if(selected_space.indexX == movement_x[i] &amp;&amp; selected_space.indexY == movement_y[i])
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn Tracker
player_turn = (turn_count % player_count) + 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
